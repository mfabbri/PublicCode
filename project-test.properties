#-----------------------------------------------------------------
# Licensed Materials - Property of IBM
#
# WebSphere Commerce
#
# (C) Copyright IBM Corp. 2007, 2010 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#-----------------------------------------------------------------

#===============================================================================
# This file contains properties used by the WCBD server deployment process.
#===============================================================================

#===============================================================================
# CONFIGURATION: Change the properties in this file as appropriate. Refer to the
# property comments for configuration details.
#===============================================================================

#===============================================================================
# General WCBD server deployment properties
#===============================================================================

#-------------------------------------------------------------------------------
# source.dir
#
# The deployment source directory.
#-------------------------------------------------------------------------------
source.dir=${basedir}/source

#-------------------------------------------------------------------------------
# ear.dir
#
# The directory containing EAR assets to be deployed, excluding Java EE 
# modules.
#-------------------------------------------------------------------------------
ear.dir=${source.dir}/wc.ear

#-------------------------------------------------------------------------------
# module.dir
#
# The directory containing Java EE module assets to be deployed. This includes
# connector, EJB, and web modules.
#-------------------------------------------------------------------------------
module.dir=${source.dir}/wc.ear.ext

#-------------------------------------------------------------------------------
# log.dir
#
# The log directory.
#-------------------------------------------------------------------------------
log.dir=${basedir}/logs/${build.label}-${target.env}-${tstamp}

#-------------------------------------------------------------------------------
# log.file
#
# The log file.
#-------------------------------------------------------------------------------
log.file=${log.dir}/wcbd-deploy-server.log

#-------------------------------------------------------------------------------
# log.zip.file
#
# The log zip files attached to build failure notification.
#-------------------------------------------------------------------------------
log.zip.file=${log.dir}/wcbd-deploy-server-log-${build.label}-${target.env}.zip

#-------------------------------------------------------------------------------
# working.dir
#
# The working directory used to store temporary files.
#-------------------------------------------------------------------------------
working.dir=${basedir}/working

#-------------------------------------------------------------------------------
# working.partial.app.dir
#
# The working directory to prepare deployable modules with matching targetable
# files renamed and other targetable files deleted.
#-------------------------------------------------------------------------------
working.module.dir=${working.dir}/module

#-------------------------------------------------------------------------------
# working.partial.app.dir
#
# The working directory for packaging a partial application zip file.
#-------------------------------------------------------------------------------
working.partial.app.dir=${working.dir}/partialapp

#-------------------------------------------------------------------------------
# working.wc.server.dir
#
# The working directory for synchronizing wc-server.xml.
#-------------------------------------------------------------------------------
working.wc.server.dir=${working.dir}/wc-server

#-------------------------------------------------------------------------------
# working.wc.server.archive.dir
#
# The working directory for archiving wc-server.xml before synchronization.
#-------------------------------------------------------------------------------
working.wc.server.archive.dir=${working.wc.server.dir}/archive

#-------------------------------------------------------------------------------
# connector.module.list
#
# The comma-separated list of connector modules to be deployed. Each entry
# should not have the ".rar" suffix.
#
# Example:
#   TestConnector1,TestConnector2
#-------------------------------------------------------------------------------
connector.module.list=

#-------------------------------------------------------------------------------
# ejb.module.list
#
# The comma-separated list of EJB modules to be deployed. Each entry should not
# have the ".jar" suffix.
#
# Example:
#   WebSphereCommerceServerExtensionsData,TestEJB1
#-------------------------------------------------------------------------------
ejb.module.list=

#-------------------------------------------------------------------------------
# existing.web.module.list
#
# The comma-separated list of web modules, which already exist in the WC
# application, to be deployed. Each entry should not have the ".war" suffix.
# Note that metadata files that are part of the Java EE standard (e.g. META-INF,
# WEB-INF/web.xml) in these modules will not be deployed. If such files need
# to be changed, it is required that the entire module be available for a
# module update and added to ${new.web.module.list}.
#
# Example:
#   SiteAdministation,Stores
#-------------------------------------------------------------------------------
existing.web.module.list=Stores

#-------------------------------------------------------------------------------
# new.web.module.list
#
# The comma-separated list of web modules, which are not in the WC application,
# to be deployed. Each entry should not have the ".war" suffix.
#
# Example:
#   TestWeb1,TestWeb2
#
# See ${context.root.mapping.list} and ${virtual.host.mapping.list} on how to
# include context root and virtual host information used during deployment
# respectively.
#-------------------------------------------------------------------------------
new.web.module.list=

#-------------------------------------------------------------------------------
# context.root.mapping.list
#
# The list of web module-context root mapping. The format should be a
# comma-separated list of mapping of the form <moduleURI>:<contextRoot>.
#
# Example:
#   TestWeb1.war:/wcs/testweb1,TestWeb2.war:/wcs/testweb2
#
# If not defined for a web module, a default context root same as that of the
# module name will be used.
#-------------------------------------------------------------------------------
context.root.mapping.list=

#-------------------------------------------------------------------------------
# virtual.host.mapping.list
#
# The list of web module-virtual host mapping. The format should be a
# comma-separated list of mapping of the form <moduleURI>:<virtualHost>.
#
# Example:
#   TestWeb1.war:VH_${wc.instance.name}_Preview,\
#   TestWeb2.war:VH_${wc.instance.name}_Tools
#
# If not defined for a web module, the virtual host as specified in the web
# dpeloyment descriptor will be used.
#
# SINCE: V7 FP 1
#-------------------------------------------------------------------------------
virtual.host.mapping.list=

#-------------------------------------------------------------------------------
# mapping.option.file
#
# The CSV file that contains additional mapping options to be specified when
# deploying EJB modules. For details on the CSV file format and supported
# options, refer to the WC Information Center:
#
# http://publib.boulder.ibm.com/infocenter/wchelp/v7r0m0/topic/
# com.ibm.commerce.developer.doc/concepts/cdewcbdadvsrvdeploy.htm
#
# SINCE: V7 FP 2
#-------------------------------------------------------------------------------
mapping.option.file=

#-------------------------------------------------------------------------------
# partial.app.zip.file
#
# The path to the partial application zip file to be deployed.
#-------------------------------------------------------------------------------
partial.app.zip.file=${working.dir}/partialapp.zip

#-------------------------------------------------------------------------------
# partial.app.zip.includes
#
# The comma-separated list of files in ${working.dir}/partialapp to be included
# in the partial application zip file. To include all files, leave this property
# blank.
#-------------------------------------------------------------------------------
partial.app.zip.includes=

#-------------------------------------------------------------------------------
# partial.app.zip.includes
#
# The comma-separated list of files in ${working.dir}/partialapp to be excluded
# in the partial application zip file. To not exclude any files, leave this
# property blank.
#-------------------------------------------------------------------------------
partial.app.zip.excludes=


#===============================================================================
# Properties for WebSphere Commerce
#===============================================================================

#-------------------------------------------------------------------------------
# wc.home
#
# The WebSphere Commerce installation directory.
#-------------------------------------------------------------------------------
wc.home=/opt/IBM/WebSphere/CommerceServer70

#-------------------------------------------------------------------------------
# wc.instance.name
#
# The WC instance name.
#-------------------------------------------------------------------------------
wc.instance.name=WCPTST01


#===============================================================================
# Properties for WebSphere Application Server (WAS)
#===============================================================================

#-------------------------------------------------------------------------------
# was.home
#
# The WAS installation directory.
#-------------------------------------------------------------------------------
was.home=/opt/IBM/WebSphere/AppServer

#-------------------------------------------------------------------------------
# was.profile.name
#
# The name of the WAS profile to use for invoking the administrative tasks.
#-------------------------------------------------------------------------------
was.profile.name=${wc.instance.name}

#-------------------------------------------------------------------------------
# was.application.name
#
# The WC application name deployed to WAS. In general,
# it is WC_${wc.instance.name}.
#-------------------------------------------------------------------------------
was.application.name=WC_store

#-------------------------------------------------------------------------------
# was.use.dmgr
#
# "true" if network deployment manager is used; "false" otherwise.
#-------------------------------------------------------------------------------
was.use.dmgr=true

#-------------------------------------------------------------------------------
# was.host.list
#
# A list of WAS hosts to connect to during deployment.
#
# - For single-server environment, set it to the host of the server.
# - For a clustered environment w/ a single DMGR, set it to the host of the
#   DMGR.
# - For multi-node or multi-DMGR environment, set it to a comma-separated list
#   of hosts to deploy to.
#
# Example:
#   node1.ibm.com,node2.ibm.com,node3.ibm.com
#-------------------------------------------------------------------------------
was.host.list=dmgr.store.com

#-------------------------------------------------------------------------------
# was.conntype
#
# The connection type to wsadmin. Default is "SOAP".
#-------------------------------------------------------------------------------
was.conntype=SOAP

#-------------------------------------------------------------------------------
# was.port
#
# The port corresponding to ${was.conntype} for connecting to wsadmin.
#-------------------------------------------------------------------------------
was.port=8879

#-------------------------------------------------------------------------------
# was.jvm.max.memory
#
# The maximum size of the memory for the JVM that invokes the wsadmin interface
# via the <wsadmin> Ant task.
#
# DEFAULT: 512M
#
# SINCE: V7 FP 2
#-------------------------------------------------------------------------------
was.jvm.max.memory=512M

#===============================================================================
# Database-specific properties
#===============================================================================

#-------------------------------------------------------------------------------
# db.type
#
# The database (vendor) type of the target deployment environment. This property
# is used to load the compilation classpath accordingly. The following values
# should be used:
#
#   DB2:       db2
#   Oracle:    oracle
#   IBM for i: os400
#-------------------------------------------------------------------------------
db.type=oracle

#-------------------------------------------------------------------------------
# db.name
#
# The database name.
#-------------------------------------------------------------------------------
db.name=

#-------------------------------------------------------------------------------
# db.schema.name
#
# The database schema name.
#-------------------------------------------------------------------------------
db.schema.name=

#-------------------------------------------------------------------------------
# jdbc.url
#
# The JDBC URL.
#-------------------------------------------------------------------------------
jdbc.url=jdbc:oracle:thin:@

#-------------------------------------------------------------------------------
# jdbc.driver
#
# The JDBC driver class name.
#-------------------------------------------------------------------------------
jdbc.driver=oracle.jdbc.OracleDriver

#-------------------------------------------------------------------------------
# jdbc.driver.path
#
# The colon- or semicolon-separated list of the full path(s) to the archive(s)
# containing the JDBC driver and its dependent classes.
#-------------------------------------------------------------------------------
jdbc.driver.path=/u01/app/oracle/product/11.1.0/db_1/ojdbc6.jar

#-------------------------------------------------------------------------------
# datasource.jndi.name
#
# The datasource JNDI name. Usually it is of the following format:
#
#   jdbc/WebSphere Commerce <dbType> DataSource ${wc.instance.name}
#
# Where:
#   <dbType> is the database type (one of "DB2", "Oracle", "iSeries")
#   <instanceName> is the WC instance name
#-------------------------------------------------------------------------------
datasource.jndi.name=WCPTSTDS


#===============================================================================
# Properties for dataload tools (sql, massload, idresgen, xmltransform)
#===============================================================================

#-------------------------------------------------------------------------------
# sql.onerror
#
# The action to perform when statement fails as part of the <sql> task. One of
# ((*) = default):
#
#   continue(*), stop, abort
#-------------------------------------------------------------------------------
sql.onerror=continue

#-------------------------------------------------------------------------------
# wcs.dtd.path
#
# The path to the wcs.dtd file used by acp and acug dataloads. The
# out-of-the-box file is in ${wc.home}/schema/xml/wcs.dtd, but user can also set
# it to point to a customized version.
#-------------------------------------------------------------------------------
wcs.dtd.path=${wc.home}/schema/xml/wcs.dtd

#-------------------------------------------------------------------------------
# wca.logger.config.file
#
# The path to the WCALogger config file which is used by the dataload tools.
#-------------------------------------------------------------------------------
wca.logger.config.file=${basedir}/WCALoggerConfig.xml

#-------------------------------------------------------------------------------
# wca.logger.output.dir
#
# The directory in which loader logs will be created.
#-------------------------------------------------------------------------------
wca.logger.output.dir=${log.dir}/loader

#-------------------------------------------------------------------------------
# xmltransform.params
#
# Parameters to be passed to the XSL rule file for xmltransform. It should be
# set with the following format:
#
# -param "<key1>=<value1>" -param "<key2>=<value2>" ...
#-------------------------------------------------------------------------------
xmltransform.params=

#-------------------------------------------------------------------------------
# xmltransform.debug
#
# "true" if xmltransform should output debugging information to the console;
# "false" otherwise.
#-------------------------------------------------------------------------------
xmltransform.debug=false

#-------------------------------------------------------------------------------
# idresgen.method
#
# Method to be used in processing the input file. One of ((*) = default):
#
#   load, update, mixed(*)
#-------------------------------------------------------------------------------
idresgen.method=mixed

#-------------------------------------------------------------------------------
# idresgen.customizer
#
# Name of the customizer property file to be used for the WebSphere Commerce
# database. When specifying the customizer property file with this parameter,
# omit the ".properties" file extension. The following values should be used:
#
#   DB2:       *leave blank*
#   Oracle:    OracleConnectionCustomizer
#   DB2 for i: Toolbox_RESWCSID_Customizer
#-------------------------------------------------------------------------------
idresgen.customizer=

#-------------------------------------------------------------------------------
# idresgen.input.type
#
# Type of input. One of ((*) = default):
#
#   infile(*), inputDirectory, inFileList
#-------------------------------------------------------------------------------
idresgen.input.type=infile

#-------------------------------------------------------------------------------
# idresgen.poolsize
#
# Number of identifiers to be reserved. Default value is 50.
#-------------------------------------------------------------------------------
idresgen.poolsize=50

#-------------------------------------------------------------------------------
# idresgen.maxerror
#
# Number of errors after which the idresgen utility terminates. Default value is
# 1.
#-------------------------------------------------------------------------------
idresgen.maxerror=1

#-------------------------------------------------------------------------------
# idresgen.optimize
#
# Specifies whether the idresgen utility will check for duplicate records before
# writing resolved records to the output file. One of ((*) = default):
#
#   yes(*), no
#-------------------------------------------------------------------------------
idresgen.optimize=yes

#-------------------------------------------------------------------------------
# idresgen.debug
#
# "true" if idresgen should output debugging information to the console;
# "false" otherwise.
#-------------------------------------------------------------------------------
idresgen.debug=false

#-------------------------------------------------------------------------------
# massload.method
#
# Mode of operation for the massload utility to use when modifying the database
# using input data. One of ((*) = default):
#
#   import, load, sqlimport(*), delete, createonly, loadonly
#-------------------------------------------------------------------------------
massload.method=sqlimport

#-------------------------------------------------------------------------------
# massload.noprimary
#
# Action the massload utility must take when the primary key is missing for a
# record in the input file. One of ((*) = default):
#
#   error(*), skip, insert
#-------------------------------------------------------------------------------
massload.noprimary=error

#-------------------------------------------------------------------------------
# massload.commitcount
#
# Number of records processed before the database commit occurs when using the
# SQL update method of operation.
#-------------------------------------------------------------------------------
massload.commitcount=100

#-------------------------------------------------------------------------------
# massload.commitcount
#
# Number of errors after which the massload utility will terminate in the SQL
# update method of operation. Default value is 1.
#-------------------------------------------------------------------------------
massload.maxerror=1

#-------------------------------------------------------------------------------
# massload.customizer
#
# Name of the customizer property file to be used for the WebSphere Commerce
# database. When specifying the customizer property file with this parameter,
# omit the ".properties" file extension. The following values should be used:
#
#   DB2:       *leave blank*
#   Oracle:    OracleConnectionCustomizer
#   DB2 for i: Toolbox_LODWCSDTA_Customizer
#-------------------------------------------------------------------------------
massload.customizer=

#-------------------------------------------------------------------------------
# massload.debug
#
# "true" if massload should output debugging information to the console;
# "false" otherwise.
#-------------------------------------------------------------------------------
massload.debug=false


#===============================================================================
# Properties for SQL dataload
#===============================================================================

#-------------------------------------------------------------------------------
# run.dataload.sql.common
#
# "true" if common dataload SQL should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.sql.common=true

#-------------------------------------------------------------------------------
# run.dataload.sql.target
#
# "true" if target-specific dataload SQL should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.sql.target=true

#-------------------------------------------------------------------------------
# dataload.sql.common.dir
#
# The common dataload SQL directory.
#-------------------------------------------------------------------------------
dataload.sql.common.dir=${source.dir}/dataload/sql/common

#-------------------------------------------------------------------------------
# dataload.sql.common.order
#
# "true" if common dataload SQL files are to be loaded in order as specified in
# ${dataload.sql.common.ordered.list}; "false" if common dataload SQL files are
# to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.sql.common.order=false

#-------------------------------------------------------------------------------
# dataload.sql.common.fileset.includes
#
# The comma-separated list of common dataload SQL files, relative to
# ${dataload.sql.common.dir}, to be included for loading, if
# ${dataload.sql.common.order} is set to false. To include all files, leave this
# property blank.
#-------------------------------------------------------------------------------
dataload.sql.common.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.sql.common.fileset.excludes
#
# The comma-separated list of common dataload SQL files, relative to
# ${dataload.sql.common.dir}, to be excluded from loading, if
# ${dataload.sql.common.order} is set to false. To not exclude any files, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.sql.common.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.sql.common.ordered.list
#
# The comma-separated list of common dataload SQL files, relative to
# ${dataload.sql.common.dir}, to be loaded in order, if
# ${dataload.sql.common.order} is set to true.
#-------------------------------------------------------------------------------
dataload.sql.common.ordered.list=

#-------------------------------------------------------------------------------
# dataload.sql.target.dir
#
# The target-specific dataload SQL directory.
#-------------------------------------------------------------------------------
dataload.sql.target.dir=${source.dir}/dataload/sql/${target.env}

#-------------------------------------------------------------------------------
# dataload.sql.target.order
#
# "true" if target-specific dataload SQL files are to be loaded in order as
# specified in ${dataload.sql.target.ordered.list}; "false" if target-specific
# dataload SQL files are to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.sql.target.order=false

#-------------------------------------------------------------------------------
# dataload.sql.target.fileset.includes
#
# The comma-separated list of target-specific dataload SQL files, relative to
# ${dataload.sql.target.dir}, to be included for loading, if
# ${dataload.sql.target.order} is set to false. To include all files, leave this
# property blank.
#-------------------------------------------------------------------------------
dataload.sql.target.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.sql.target.fileset.excludes
#
# The comma-separated list of target-specific dataload SQL files, relative to
# ${dataload.sql.target.dir}, to be excluded from loading, if
# ${dataload.sql.target.order} is set to false. To not exclude any file, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.sql.target.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.sql.target.ordered.list
#
# The comma-separated list of target-specific dataload SQL files, relative to
# ${dataload.sql.target.dir}, to be loaded in order, if
# ${dataload.sql.target.order} is set to true.
#-------------------------------------------------------------------------------
dataload.sql.target.ordered.list=


#===============================================================================
# Properties for XML dataload
#===============================================================================

#-------------------------------------------------------------------------------
# run.dataload.xml.common
#
# "true" if common dataload XML should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.xml.common=true

#-------------------------------------------------------------------------------
# run.dataload.xml.target
#
# "true" if target-specific dataload XML should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.xml.target=true

#-------------------------------------------------------------------------------
# dataload.xml.common.dir
#
# The common dataload XML directory.
#-------------------------------------------------------------------------------
dataload.xml.common.dir=${source.dir}/dataload/xml/common

#-------------------------------------------------------------------------------
# dataload.xml.common.order
#
# "true" if common dataload XML files are to be loaded in order as specified in
# ${dataload.xml.common.ordered.list}; "false" if common dataload XML files are
# to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.xml.common.order=false

#-------------------------------------------------------------------------------
# dataload.xml.common.fileset.includes
#
# The comma-separated list of common dataload XML files, relative to
# ${dataload.xml.common.dir}, to be included for loading, if
# ${dataload.xml.common.order} is set to false. To include all files, leave this
# property blank.
#-------------------------------------------------------------------------------
dataload.xml.common.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.xml.common.fileset.excludes
#
# The comma-separated list of common dataload XML files, relative to
# ${dataload.xml.common.dir}, to be excluded from loading, if
# ${dataload.xml.common.order} is set to false. To not exclude any files, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.xml.common.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.xml.common.ordered.list
#
# The comma-separated list of common dataload XML files, relative to
# ${dataload.xml.common.dir}, to be loaded in order, if
# ${dataload.xml.common.order} is set to true.
#-------------------------------------------------------------------------------
dataload.xml.common.ordered.list=

#-------------------------------------------------------------------------------
# dataload.xml.common.idresgen.excludes
#
# The comma-separated list of common dataload XML files, relative to
# ${dataload.xml.common.dir}, to be excluded from idresgen during the dataload.
# To not exclude any files, leave this property blank.
#-------------------------------------------------------------------------------
dataload.xml.common.idresgen.excludes=

#-------------------------------------------------------------------------------
# dataload.xml.target.dir
#
# The target-specific dataload XML directory.
#-------------------------------------------------------------------------------
dataload.xml.target.dir=${source.dir}/dataload/xml/${target.env}

#-------------------------------------------------------------------------------
# dataload.xml.target.order
#
# "true" if target-specific dataload XML files are to be loaded in order as
# specified in ${dataload.xml.target.ordered.list}; "false" if target-specific
# dataload XML files are to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.xml.target.order=false

#-------------------------------------------------------------------------------
# dataload.xml.target.fileset.includes
#
# The comma-separated list of target-specific dataload XML files, relative to
# ${dataload.xml.target.dir}, to be included for loading, if
# ${dataload.xml.target.order} is set to false. To include all files, leave this
# property blank.
#-------------------------------------------------------------------------------
dataload.xml.target.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.xml.target.fileset.excludes
#
# The comma-separated list of target-specific dataload XML files, relative to
# ${dataload.xml.target.dir}, to be excluded from loading, if
# ${dataload.xml.target.order} is set to false. To not exclude any file, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.xml.target.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.xml.target.ordered.list
#
# The comma-separated list of target-specific dataload XML files, relative to
# ${dataload.xml.target.dir}, to be loaded in order, if
# ${dataload.xml.target.order} is set to true.
#-------------------------------------------------------------------------------
dataload.xml.target.ordered.list=

#-------------------------------------------------------------------------------
# dataload.xml.target.idresgen.excludes
#
# The comma-separated list of target-specific dataload XML files, relative to
# ${dataload.xml.target.dir}, to be excluded from idresgen during the dataload.
# To not exclude any files, leave this property blank.
#-------------------------------------------------------------------------------
dataload.xml.target.idresgen.excludes=


#===============================================================================
# Properties for ACUG dataload
#===============================================================================

#-------------------------------------------------------------------------------
# run.dataload.acug.common
#
# "true" if common dataload ACUG should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.acug.common=true

#-------------------------------------------------------------------------------
# run.dataload.acug.target
#
# "true" if target-specific dataload ACUG should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.acug.target=true

#-------------------------------------------------------------------------------
# dataload.acug.common.dir
#
# The common dataload ACUG directory.
#-------------------------------------------------------------------------------
dataload.acug.common.dir=${source.dir}/dataload/acug/common

#-------------------------------------------------------------------------------
# dataload.acug.common.order
#
# "true" if common dataload ACUG files are to be loaded in order as specified in
# ${dataload.acug.common.ordered.list}; "false" if common dataload ACUG files
# are to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.acug.common.order=false

#-------------------------------------------------------------------------------
# dataload.acug.common.fileset.includes
#
# The comma-separated list of common dataload ACUG files, relative to
# ${dataload.acug.common.dir}, to be included for loading, if
# ${dataload.acug.common.order} is set to false. To include all files, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.acug.common.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.acug.common.fileset.excludes
#
# The comma-separated list of common dataload ACUG files, relative to
# ${dataload.acug.common.dir}, to be excluded from loading, if
# ${dataload.acug.common.order} is set to false. To not exclude any files, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.acug.common.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.acug.common.ordered.list
#
# The comma-separated list of common dataload ACUG files, relative to
# ${dataload.acug.common.dir}, to be loaded in order, if
# ${dataload.acug.common.order} is set to true.
#-------------------------------------------------------------------------------
dataload.acug.common.ordered.list=

#-------------------------------------------------------------------------------
# dataload.acug.target.dir
#
# The target-specific dataload ACUG directory.
#-------------------------------------------------------------------------------
dataload.acug.target.dir=${source.dir}/dataload/acug/${target.env}

#-------------------------------------------------------------------------------
# dataload.acug.target.order
#
# "true" if target-specific dataload ACUG files are to be loaded in order as
# specified in ${dataload.acug.target.ordered.list}; "false" if target-specific
# dataload ACUG files are to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.acug.target.order=false

#-------------------------------------------------------------------------------
# dataload.acug.target.fileset.includes
#
# The comma-separated list of target-specific dataload ACUG files, relative to
# ${dataload.acug.target.dir}, to be included for loading, if
# ${dataload.acug.target.order} is set to false. To include all files, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.acug.target.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.acug.target.fileset.excludes
#
# The comma-separated list of target-specific dataload ACUG files, relative to
# ${dataload.acug.target.dir}, to be excluded from loading, if
# ${dataload.acug.target.order} is set to false. To not exclude any file, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.acug.target.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.acug.target.ordered.list
#
# The comma-separated list of target-specific dataload ACUG files, relative to
# ${dataload.acug.target.dir}, to be loaded in order, if
# ${dataload.acug.target.order} is set to true.
#-------------------------------------------------------------------------------
dataload.acug.target.ordered.list=


#===============================================================================
# Properties for ACP dataload
#===============================================================================

#-------------------------------------------------------------------------------
# run.dataload.acp.common
#
# "true" if common dataload ACP should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.acp.common=true

#-------------------------------------------------------------------------------
# run.dataload.acp.target
#
# "true" if target-specific dataload ACP should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.acp.target=true

#-------------------------------------------------------------------------------
# dataload.acp.common.dir
#
# The common dataload ACP directory.
#-------------------------------------------------------------------------------
dataload.acp.common.dir=${source.dir}/dataload/acp/common

#-------------------------------------------------------------------------------
# dataload.acp.common.order
#
# "true" if common dataload ACP files are to be loaded in order as specified in
# ${dataload.acp.common.ordered.list}; "false" if common dataload ACP files are
# to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.acp.common.order=false

#-------------------------------------------------------------------------------
# dataload.acp.common.fileset.includes
#
# The comma-separated list of common dataload ACP files, relative to
# ${dataload.acp.common.dir}, to be included for loading, if
# ${dataload.acp.common.order} is set to false. To include all files, leave this
# property blank.
#-------------------------------------------------------------------------------
dataload.acp.common.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.acp.common.fileset.excludes
#
# The comma-separated list of common dataload ACP files, relative to
# ${dataload.acp.common.dir}, to be excluded from loading, if
# ${dataload.acp.common.order} is set to false. To not exclude any files, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.acp.common.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.acp.common.ordered.list
#
# The comma-separated list of common dataload ACP files, relative to
# ${dataload.acp.common.dir}, to be loaded in order, if
# ${dataload.acp.common.order} is set to true.
#-------------------------------------------------------------------------------
dataload.acp.common.ordered.list=

#-------------------------------------------------------------------------------
# dataload.acp.target.dir
#
# The target-specific dataload ACP directory.
#-------------------------------------------------------------------------------
dataload.acp.target.dir=${source.dir}/dataload/acp/${target.env}

#-------------------------------------------------------------------------------
# dataload.acp.target.order
#
# "true" if target-specific dataload ACP files are to be loaded in order as
# specified in ${dataload.acp.target.ordered.list}; "false" if target-specific
# dataload ACP files are to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.acp.target.order=false

#-------------------------------------------------------------------------------
# dataload.acp.target.fileset.includes
#
# The comma-separated list of target-specific dataload ACP files, relative to
# ${dataload.acp.target.dir}, to be included for loading, if
# ${dataload.acp.target.order} is set to false. To include all files, leave this
# property blank.
#-------------------------------------------------------------------------------
dataload.acp.target.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.acp.target.fileset.excludes
#
# The comma-separated list of target-specific dataload ACP files, relative to
# ${dataload.acp.target.dir}, to be excluded from loading, if
# ${dataload.acp.target.order} is set to false. To not exclude any file, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.acp.target.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.acp.target.ordered.list
#
# The comma-separated list of target-specific dataload ACP files, relative to
# ${dataload.acp.target.dir}, to be loaded in order, if
# ${dataload.acp.target.order} is set to true.
#-------------------------------------------------------------------------------
dataload.acp.target.ordered.list=


#===============================================================================
# Properties for ACP (NLS) dataload
#===============================================================================

#-------------------------------------------------------------------------------
# run.dataload.acpnls.common
#
# "true" if common dataload ACP (NLS) should be loaded; "false" otherwise.
#-------------------------------------------------------------------------------
run.dataload.acpnls.common=true

#-------------------------------------------------------------------------------
# run.dataload.acpnls.target
#
# "true" if target-specific dataload ACP (NLS) should be loaded; "false"
# otherwise.
#-------------------------------------------------------------------------------
run.dataload.acpnls.target=true

#-------------------------------------------------------------------------------
# dataload.acpnls.common.dir
#
# The common dataload ACP (NLS) directory.
#-------------------------------------------------------------------------------
dataload.acpnls.common.dir=${source.dir}/dataload/acpnls/common

#-------------------------------------------------------------------------------
# dataload.acpnls.common.order
#
# "true" if common dataload ACP (NLS) files are to be loaded in order as
# specified in ${dataload.acpnls.common.ordered.list}; "false" if common
# dataload ACP (NLS) files are to be loaded via fileset in no particular order.
#-------------------------------------------------------------------------------
dataload.acpnls.common.order=false

#-------------------------------------------------------------------------------
# dataload.acpnls.common.fileset.includes
#
# The comma-separated list of common dataload ACP (NLS) files, relative to
# ${dataload.acpnls.common.dir}, to be included for loading, if
# ${dataload.acpnls.common.order} is set to false. To include all files, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.acpnls.common.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.acpnls.common.fileset.excludes
#
# The comma-separated list of common dataload ACP (NLS) files, relative to
# ${dataload.acpnls.common.dir}, to be excluded from loading, if
# ${dataload.acpnls.common.order} is set to false. To not exclude any files,
# leave this property blank.
#-------------------------------------------------------------------------------
dataload.acpnls.common.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.acpnls.common.ordered.list
#
# The comma-separated list of common dataload ACP (NLS) files, relative to
# ${dataload.acpnls.common.dir}, to be loaded in order, if
# ${dataload.acpnls.common.order} is set to true.
#-------------------------------------------------------------------------------
dataload.acpnls.common.ordered.list=

#-------------------------------------------------------------------------------
# dataload.acpnls.target.dir
#
# The target-specific dataload ACP (NLS) directory.
#-------------------------------------------------------------------------------
dataload.acpnls.target.dir=${source.dir}/dataload/acpnls/${target.env}

#-------------------------------------------------------------------------------
# dataload.acpnls.target.order
#
# "true" if target-specific dataload ACP (NLS) files are to be loaded in order
# as specified in ${dataload.acpnls.target.ordered.list}; "false" if target-
# specific dataload ACP (NLS) files are to be loaded via fileset in no
# particular order.
#-------------------------------------------------------------------------------
dataload.acpnls.target.order=false

#-------------------------------------------------------------------------------
# dataload.acpnls.target.fileset.includes
#
# The comma-separated list of target-specific dataload ACP (NLS) files, relative
# to ${dataload.acpnls.target.dir}, to be included for loading, if
# ${dataload.acpnls.target.order} is set to false. To include all files, leave
# this property blank.
#-------------------------------------------------------------------------------
dataload.acpnls.target.fileset.includes=

#-------------------------------------------------------------------------------
# dataload.acpnls.target.fileset.excludes
#
# The comma-separated list of target-specific dataload ACP (NLS) files, relative
# to ${dataload.acpnls.target.dir}, to be excluded from loading, if
# ${dataload.acpnls.target.order} is set to false. To not exclude any file,
# leave this property blank.
#-------------------------------------------------------------------------------
dataload.acpnls.target.fileset.excludes=

#-------------------------------------------------------------------------------
# dataload.acpnls.target.ordered.list
#
# The comma-separated list of target-specific dataload ACP (NLS) files, relative
# to ${dataload.acpnls.target.dir}, to be loaded in order, if
# ${dataload.acpnls.target.order} is set to true.
#-------------------------------------------------------------------------------
dataload.acpnls.target.ordered.list=


#===============================================================================
# Properties for WAS deployment
#===============================================================================

#-------------------------------------------------------------------------------
# run.wsadmin
#
# "true" if wsadmin deployment should be run; "false" otherwise.
#-------------------------------------------------------------------------------
run.wsadmin=true

#-------------------------------------------------------------------------------
# wsadmin.ant.target
#
# The Ant target containing the actual wsadmin call to
# ${wsadmin.deploy.script.file} with set arguments. The default target
# "wsadmin.wcbd.helper" is provided with set arguments in
# wcbd-deploy-common.xml.
#-------------------------------------------------------------------------------
wsadmin.ant.target=wcbd.wsadmin.helper

#-------------------------------------------------------------------------------
# wsadmin.script.dir
#
# The wsadmin script directory.
#-------------------------------------------------------------------------------
wsadmin.script.dir=${basedir}/scripts

#-------------------------------------------------------------------------------
# wsadmin.properties.file
#
# The properties file that contains JVM system properties that are passed in to
# the wsadmin utility. A template for the properties file,
# ${was.home}/properties/wsadmin.properties, is provided. For details, refer to
# the WAS Information Center:
#
# http://publib.boulder.ibm.com/infocenter/wasinfo/v7r0/topic/
# com.ibm.websphere.nd.multiplatform.doc/info/ae/ae/rxml_propscript.html
#
# If you do not require such functionality, leave this property blank.
#
# SINCE: V7 FP 2
#-------------------------------------------------------------------------------
wsadmin.properties.file=

#-------------------------------------------------------------------------------
# wsadmin.deploy.script.file
#
# The deployment wsadmin Jython script.
#-------------------------------------------------------------------------------
wsadmin.deploy.script.file=${wsadmin.script.dir}/wcbd-wsadmin.py

#-------------------------------------------------------------------------------
# rollout.update
#
# "true" if rollout update should be executed; "false" otherwise. This option
# only works for clustered environments w/ DMGR.
#-------------------------------------------------------------------------------
rollout.update=false

#-------------------------------------------------------------------------------
# rollout.update.timeout
#
# The timeout value for rollout update.
#-------------------------------------------------------------------------------
rollout.update.timeout=300

#-------------------------------------------------------------------------------
# partial.app.full.update
#
# "true" if the partial application update should be performed as a full update,
# which the binaries directory is erased and the content of the updated EAR file
# is completely extracted. "false" if only the changed files within that EAR
# file is updated on the node and is then synchronized.
#
# Setting this value to "true" may improve the deployment time if the partial
# application zip file contains a large number of files. However, setting it
# to "true" may reset the file permission of the expanded EAR root on UNIX
# systems, which subsequently denies access to the static Web server contents by
# the Web server on a single-server environment. It is recommended that this
# property be set to "false" for UNIX, single-server environments.
#
# SINCE: V7 FP 1 
#-------------------------------------------------------------------------------
partial.app.full.update=true


#===============================================================================
# Properties for static web server asset deployment
#===============================================================================

#-------------------------------------------------------------------------------
# run.static.web.deploy
#
# "true" if static web server assets should be deployed; "false" otherwise.
#-------------------------------------------------------------------------------
run.static.web.deploy=true

#-------------------------------------------------------------------------------
# static.web.deploy.ant.file
#
# The Ant file that is used to deploy static web server assets. Refer to the
# documentation for details on creating a custom extract Ant file using the
# template provided.
#-------------------------------------------------------------------------------
static.web.deploy.ant.file=${build.folder}/static-web-deploy-scp-test.xml

#-------------------------------------------------------------------------------
# static.web.dir
#
# The static web server assets directory.
#-------------------------------------------------------------------------------
static.web.dir=/opt/IBM/WebSphere/wasprofiles/WCprofile/installedApps/WCcell/WC_store.ear

#-------------------------------------------------------------------------------
# static.web.dir.includes
#
# The comma-separated list of files in ${static.web.dir} to be included from
# deployment. To include all files, leave this property blank.
#-------------------------------------------------------------------------------
static.web.dir.includes=Stores.war/**

#-------------------------------------------------------------------------------
# static.web.dir.excludes
#
# The comma-separated list of files in ${static.web.dir} to be excluded from
# deployment. To not exclude any file, leave this property blank.
#-------------------------------------------------------------------------------
static.web.dir.excludes=**/*.jar,**/*.jsp,**/META-INF/*,**/*.jspf,**/WEB-INF/*,**/*.properties

#===============================================================================
# Properties for static web server asset deployment
#===============================================================================

#-------------------------------------------------------------------------------
# run.wc.server.sync
#
# "true" if wc-server.xml should be synchronized; "false" otherwise.
#-------------------------------------------------------------------------------
run.wc.server.sync=true

#-------------------------------------------------------------------------------
# wc.server.sync.ant.file
#
# The Ant file that is used to synchronize wc-server.xml. Refer to the
# documentation for details on creating a custom extract Ant file using the
# template provided.
#-------------------------------------------------------------------------------
wc.server.sync.ant.file=${build.folder}/wc-server-sync-local-test.xml

#===============================================================================
# Properties for data load utility customization deployment
#===============================================================================

#-------------------------------------------------------------------------------
# run.dataload.cust.deploy
#
# "true" if data load utility customization should be deployed; "false"
# otherwise.
#
# SINCE: V7 FP 2
#-------------------------------------------------------------------------------
run.dataload.cust.deploy=false

#-------------------------------------------------------------------------------
# dataload.cust.deploy.ant.file
#
# The Ant file that is used to deploy data load utility customization. Refer to
# the documentation for details on creating a custom extract Ant file using the
# template provided.
#
# SINCE: V7 FP 2
#-------------------------------------------------------------------------------
dataload.cust.deploy.ant.file=

#-------------------------------------------------------------------------------
# dataload.cust.deploy.java.module.includes
#
# The comma-separated list of Java modules in ${ear.dir} to be included from
# deployment.
#
# DEFAULT: WebSphereCommerceServerExtensionsLogic.jar
#
# SINCE: V7 FP 2
#-------------------------------------------------------------------------------
dataload.cust.deploy.java.module.includes=WebSphereCommerceServerExtensionsLogic.jar

#-------------------------------------------------------------------------------
# dataload.cust.deploy.dsl.config.includes
#
# The comma-separated list of Data Service Layer configuration files in
# ${ear.dir}/xml/config to be included from deployment.
#
# DEFAULT: com.ibm.commerce.*-ext/**
#
# SINCE: V7 FP 2
#-------------------------------------------------------------------------------
dataload.cust.deploy.dsl.config.includes=com.ibm.commerce.*-ext/**

#===============================================================================
# Properties for e-mail notification
#===============================================================================

#-------------------------------------------------------------------------------
# run.mail.success
#
# "true" if deployment success notification should be sent; "false" otherwise.
#-------------------------------------------------------------------------------
run.mail.success=false

#-------------------------------------------------------------------------------
# run.mail.failure
#
# "true" if deployment failure notification should be sent; "false" otherwise.
#-------------------------------------------------------------------------------
run.mail.failure=false

#-------------------------------------------------------------------------------
# mail.from
#
# The e-mail address of the sender.
#-------------------------------------------------------------------------------
mail.from=

#-------------------------------------------------------------------------------
# mail.success.tolist
#
# The comma-separated list of recipients of deployment success notification.
#-------------------------------------------------------------------------------
mail.success.tolist=

#-------------------------------------------------------------------------------
# mail.failure.tolist
#
# The comma-separated list of recipients deployment failure notification.
#-------------------------------------------------------------------------------
mail.failure.tolist=

#-------------------------------------------------------------------------------
# mail.mailhost
#
# The host name of the SMTP server.
#-------------------------------------------------------------------------------
mail.mailhost=

#-------------------------------------------------------------------------------
# mail.mailport
#
# The TCP port of the SMTP server.
#-------------------------------------------------------------------------------
mail.mailport=25

#-------------------------------------------------------------------------------
# mail.ssl
#
# "true" if TLS/SSL is needed; "false" otherwise.
#-------------------------------------------------------------------------------
mail.ssl=false

#-------------------------------------------------------------------------------
# mail.success.subject
#
# The e-mail subject to use for deployment success notification.
#-------------------------------------------------------------------------------
mail.success.subject=WCBD Deploy Successful: ${build.label}-${target.env}

#-------------------------------------------------------------------------------
# mail.failure.subject
#
# The e-mail subject to use for deployment failure notification.
#-------------------------------------------------------------------------------
mail.failure.subject=WCBD Deploy FAILED: ${build.label}-${target.env}

#-------------------------------------------------------------------------------
# mail.success.message
#
# The e-mail message to use for deployment success notification.
#-------------------------------------------------------------------------------
mail.success.message=

#-------------------------------------------------------------------------------
# mail.failure.subject
#
# The e-mail message to use for deployment failure notification.
#-------------------------------------------------------------------------------
mail.failure.message=Check attached logs for details.


#===============================================================================
# CUSTOMIZATION: Add new properties required by customization below.
#===============================================================================
#-------------------------------------------------------------------------------
# cluster.members
#
# Miembros del cluster para calentar la cache.
#-------------------------------------------------------------------------------
cluster.members=node1.store.com:9080,node1.store.com:9085,node2.store.com:9080,node2.store.com:9085